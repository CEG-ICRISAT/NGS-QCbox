baseqc0 = {
    from('Read1.gz', 'Read2.gz'){
        exec  """ \$QCBIN/raspberry Read1.gz Read2.gz"""
    }
}

baseqc = {
    from('Read1.gz', 'Read2.gz'){
        exec  """ \$QCBIN/raspberry Read1.gz"""
        exec """ mv read_lengths.txt Read1_read_lengths.txt """
        exec  """ \$QCBIN/raspberry Read2.gz"""
        exec """ mv read_lengths.txt Read2_read_lengths.txt """
    }
}

qtrim = {
    from('Read1.gz', 'Read2.gz'){
            exec """ \$QCBIN/sickle pe -f <(zcat $input1) -r <(zcat $input2) -o $output1 -p $output2 -s $output3 -q 30 -l 50 -n -t sanger """
    }
}

baseqc1 = {
        exec "\$QCBIN/raspberry $input1.qtrim"
        exec """ mv read_lengths.txt Read1.qtrim_read_lengths.txt """
        exec "\$QCBIN/raspberry $input2.qtrim"
        exec """ mv read_lengths.txt Read2.qtrim_read_lengths.txt """
        exec "\$QCBIN/raspberry $input3.qtrim"
        exec """ mv read_lengths.txt Singleton.qtrim_read_lengths.txt """
        forward input
}

baseqc2 = {
        exec "\$QCBIN/raspberry $input1.qtrim  $input2.qtrim $input3.qtrim"
	forward input
}

sam = {
exec """ echo \$REFERENCE"""
exec """ echo \$GENOME_SIZE"""
exec """ echo \$MAX_INSERT_SIZE"""
exec """ echo \$MIN_INSERT_SIZE"""
exec """ echo \$BOWTIE2_INDEX_PATH"""
	exec """ \$(echo $QCBIN/bowtie2) -p 10 --end-to-end -I \$(echo $MIN_INSERT_SIZE) -X \$(echo $MAX_INSERT_SIZE) -x \$(echo $BOWTIE2_INDEX_PATH) -1 $input1 -2 $input2 -U $input3 -S $output """
}

bam = {
        exec """ \$(echo $QCBIN/samtools) view -bSu $input | \$(echo $QCBIN/samtools) sort -o - - > $output"""
}
bam1 = {
           exec """ \$(echo $QCBIN/samtools) view -bSu $input | \$(echo $QCBIN/samtools) sort - -f $output"""
}

bai = {
     exec """ \$(echo $QCBIN/samtools)  index  $input"""
     forward input
}

read_depths = {
            from('.bam'){
                exec """ \$(echo $QCBIN/bedtools) genomecov -bga -ibam $input  > $output.bed """
            }
}

coverage = {
    exec """ \$(echo $QCBIN/genome_cov.py) $input.bed  \$(echo $GENOME_SIZE) """
}

variant_calling = {
    exec """ \$(echo $QCBIN/samtools) mpileup -uf \$(echo $REFERENCE) $input | \$(echo $QCBIN/bcftools) view -bvcg - > $output.bcf"""
}

vcf = {
exec """ \$(echo $QCBIN/bcftools) view $input.bcf | \$(echo $QCBIN/vcfutils.pl) varFilter > $output"""
}

Bpipe.run  { baseqc0 + qtrim + baseqc2 + sam + bam + bai + [read_depths + coverage , variant_calling + vcf]}
